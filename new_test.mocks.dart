// Mocks generated by Mockito 5.4.5 from annotations
// in recolearn_mobile/test/new_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i12;
import 'dart:ui' as _i14;

import 'package:flutter/material.dart' as _i4;
import 'package:get/get.dart' as _i2;
import 'package:get/get_state_manager/src/simple/list_notifier.dart' as _i13;
import 'package:get_storage/get_storage.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i17;
import 'package:recolearn_mobile/cache_manager.dart' as _i16;
import 'package:recolearn_mobile/controllers/shops/shops_controller.dart'
    as _i9;
import 'package:recolearn_mobile/models/auth/login_model/login_response_model.dart'
    as _i15;
import 'package:recolearn_mobile/models/shops/category_by_id_model.dart' as _i6;
import 'package:recolearn_mobile/models/shops/parent_category_model.dart'
    as _i10;
import 'package:recolearn_mobile/models/shops/product_by_id_model.dart' as _i7;
import 'package:recolearn_mobile/models/shops/shops_model.dart' as _i5;
import 'package:recolearn_mobile/models/shops/sub_category_model.dart' as _i11;
import 'package:recolearn_mobile/services/shops/shops_service.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRxList_0<E> extends _i1.SmartFake implements _i2.RxList<E> {
  _FakeRxList_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeShopsService_1 extends _i1.SmartFake implements _i3.ShopsService {
  _FakeShopsService_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRx_2<T> extends _i1.SmartFake implements _i2.Rx<T> {
  _FakeRx_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRxBool_3 extends _i1.SmartFake implements _i2.RxBool {
  _FakeRxBool_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRxInt_4 extends _i1.SmartFake implements _i2.RxInt {
  _FakeRxInt_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRxString_5 extends _i1.SmartFake implements _i2.RxString {
  _FakeRxString_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTextEditingController_6 extends _i1.SmartFake
    implements _i4.TextEditingController {
  _FakeTextEditingController_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeInternalFinalCallback_7<T> extends _i1.SmartFake
    implements _i2.InternalFinalCallback<T> {
  _FakeInternalFinalCallback_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeShopsModel_8 extends _i1.SmartFake implements _i5.ShopsModel {
  _FakeShopsModel_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeCategoryByIdModel_9 extends _i1.SmartFake
    implements _i6.CategoryByIdModel {
  _FakeCategoryByIdModel_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeProductByIdModel_10 extends _i1.SmartFake
    implements _i7.ProductByIdModel {
  _FakeProductByIdModel_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMicrotask_11 extends _i1.SmartFake implements _i8.Microtask {
  _FakeMicrotask_11(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGetQueue_12 extends _i1.SmartFake implements _i2.GetQueue {
  _FakeGetQueue_12(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeValueStorage_13<T> extends _i1.SmartFake
    implements _i8.ValueStorage<T> {
  _FakeValueStorage_13(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ShopsController].
///
/// See the documentation for Mockito's code generation for more information.
class MockShopsController extends _i1.Mock implements _i9.ShopsController {
  @override
  _i2.RxList<_i10.ParentCat> get parentCatList =>
      (super.noSuchMethod(
            Invocation.getter(#parentCatList),
            returnValue: _FakeRxList_0<_i10.ParentCat>(
              this,
              Invocation.getter(#parentCatList),
            ),
            returnValueForMissingStub: _FakeRxList_0<_i10.ParentCat>(
              this,
              Invocation.getter(#parentCatList),
            ),
          )
          as _i2.RxList<_i10.ParentCat>);

  @override
  set parentCatList(_i2.RxList<_i10.ParentCat>? _parentCatList) =>
      super.noSuchMethod(
        Invocation.setter(#parentCatList, _parentCatList),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<_i11.SubCat> get subCatList =>
      (super.noSuchMethod(
            Invocation.getter(#subCatList),
            returnValue: _FakeRxList_0<_i11.SubCat>(
              this,
              Invocation.getter(#subCatList),
            ),
            returnValueForMissingStub: _FakeRxList_0<_i11.SubCat>(
              this,
              Invocation.getter(#subCatList),
            ),
          )
          as _i2.RxList<_i11.SubCat>);

  @override
  set subCatList(_i2.RxList<_i11.SubCat>? _subCatList) => super.noSuchMethod(
    Invocation.setter(#subCatList, _subCatList),
    returnValueForMissingStub: null,
  );

  @override
  _i2.RxList<_i11.Recommendation> get pSubCatList =>
      (super.noSuchMethod(
            Invocation.getter(#pSubCatList),
            returnValue: _FakeRxList_0<_i11.Recommendation>(
              this,
              Invocation.getter(#pSubCatList),
            ),
            returnValueForMissingStub: _FakeRxList_0<_i11.Recommendation>(
              this,
              Invocation.getter(#pSubCatList),
            ),
          )
          as _i2.RxList<_i11.Recommendation>);

  @override
  set pSubCatList(_i2.RxList<_i11.Recommendation>? _pSubCatList) =>
      super.noSuchMethod(
        Invocation.setter(#pSubCatList, _pSubCatList),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<_i11.Recommendation> get recommended =>
      (super.noSuchMethod(
            Invocation.getter(#recommended),
            returnValue: _FakeRxList_0<_i11.Recommendation>(
              this,
              Invocation.getter(#recommended),
            ),
            returnValueForMissingStub: _FakeRxList_0<_i11.Recommendation>(
              this,
              Invocation.getter(#recommended),
            ),
          )
          as _i2.RxList<_i11.Recommendation>);

  @override
  set recommended(_i2.RxList<_i11.Recommendation>? _recommended) =>
      super.noSuchMethod(
        Invocation.setter(#recommended, _recommended),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxList<_i11.KitElement> get assetList =>
      (super.noSuchMethod(
            Invocation.getter(#assetList),
            returnValue: _FakeRxList_0<_i11.KitElement>(
              this,
              Invocation.getter(#assetList),
            ),
            returnValueForMissingStub: _FakeRxList_0<_i11.KitElement>(
              this,
              Invocation.getter(#assetList),
            ),
          )
          as _i2.RxList<_i11.KitElement>);

  @override
  set assetList(_i2.RxList<_i11.KitElement>? _assetList) => super.noSuchMethod(
    Invocation.setter(#assetList, _assetList),
    returnValueForMissingStub: null,
  );

  @override
  _i3.ShopsService get shopsService =>
      (super.noSuchMethod(
            Invocation.getter(#shopsService),
            returnValue: _FakeShopsService_1(
              this,
              Invocation.getter(#shopsService),
            ),
            returnValueForMissingStub: _FakeShopsService_1(
              this,
              Invocation.getter(#shopsService),
            ),
          )
          as _i3.ShopsService);

  @override
  set shopsService(_i3.ShopsService? _shopsService) => super.noSuchMethod(
    Invocation.setter(#shopsService, _shopsService),
    returnValueForMissingStub: null,
  );

  @override
  _i2.Rx<_i10.ParentCat> get parentCat =>
      (super.noSuchMethod(
            Invocation.getter(#parentCat),
            returnValue: _FakeRx_2<_i10.ParentCat>(
              this,
              Invocation.getter(#parentCat),
            ),
            returnValueForMissingStub: _FakeRx_2<_i10.ParentCat>(
              this,
              Invocation.getter(#parentCat),
            ),
          )
          as _i2.Rx<_i10.ParentCat>);

  @override
  set parentCat(_i2.Rx<_i10.ParentCat>? _parentCat) => super.noSuchMethod(
    Invocation.setter(#parentCat, _parentCat),
    returnValueForMissingStub: null,
  );

  @override
  _i2.RxBool get isSubLoading =>
      (super.noSuchMethod(
            Invocation.getter(#isSubLoading),
            returnValue: _FakeRxBool_3(this, Invocation.getter(#isSubLoading)),
            returnValueForMissingStub: _FakeRxBool_3(
              this,
              Invocation.getter(#isSubLoading),
            ),
          )
          as _i2.RxBool);

  @override
  set isSubLoading(_i2.RxBool? _isSubLoading) => super.noSuchMethod(
    Invocation.setter(#isSubLoading, _isSubLoading),
    returnValueForMissingStub: null,
  );

  @override
  _i2.RxBool get isPSubLoading =>
      (super.noSuchMethod(
            Invocation.getter(#isPSubLoading),
            returnValue: _FakeRxBool_3(this, Invocation.getter(#isPSubLoading)),
            returnValueForMissingStub: _FakeRxBool_3(
              this,
              Invocation.getter(#isPSubLoading),
            ),
          )
          as _i2.RxBool);

  @override
  set isPSubLoading(_i2.RxBool? _isPSubLoading) => super.noSuchMethod(
    Invocation.setter(#isPSubLoading, _isPSubLoading),
    returnValueForMissingStub: null,
  );

  @override
  _i2.RxBool get viewMore =>
      (super.noSuchMethod(
            Invocation.getter(#viewMore),
            returnValue: _FakeRxBool_3(this, Invocation.getter(#viewMore)),
            returnValueForMissingStub: _FakeRxBool_3(
              this,
              Invocation.getter(#viewMore),
            ),
          )
          as _i2.RxBool);

  @override
  set viewMore(_i2.RxBool? _viewMore) => super.noSuchMethod(
    Invocation.setter(#viewMore, _viewMore),
    returnValueForMissingStub: null,
  );

  @override
  _i2.RxBool get isProductList =>
      (super.noSuchMethod(
            Invocation.getter(#isProductList),
            returnValue: _FakeRxBool_3(this, Invocation.getter(#isProductList)),
            returnValueForMissingStub: _FakeRxBool_3(
              this,
              Invocation.getter(#isProductList),
            ),
          )
          as _i2.RxBool);

  @override
  set isProductList(_i2.RxBool? _isProductList) => super.noSuchMethod(
    Invocation.setter(#isProductList, _isProductList),
    returnValueForMissingStub: null,
  );

  @override
  _i2.RxInt get productIndex =>
      (super.noSuchMethod(
            Invocation.getter(#productIndex),
            returnValue: _FakeRxInt_4(this, Invocation.getter(#productIndex)),
            returnValueForMissingStub: _FakeRxInt_4(
              this,
              Invocation.getter(#productIndex),
            ),
          )
          as _i2.RxInt);

  @override
  set productIndex(_i2.RxInt? _productIndex) => super.noSuchMethod(
    Invocation.setter(#productIndex, _productIndex),
    returnValueForMissingStub: null,
  );

  @override
  _i2.RxString get searchQuery =>
      (super.noSuchMethod(
            Invocation.getter(#searchQuery),
            returnValue: _FakeRxString_5(this, Invocation.getter(#searchQuery)),
            returnValueForMissingStub: _FakeRxString_5(
              this,
              Invocation.getter(#searchQuery),
            ),
          )
          as _i2.RxString);

  @override
  set searchQuery(_i2.RxString? _searchQuery) => super.noSuchMethod(
    Invocation.setter(#searchQuery, _searchQuery),
    returnValueForMissingStub: null,
  );

  @override
  _i2.Rx<_i5.ShopsModel> get shopsData =>
      (super.noSuchMethod(
            Invocation.getter(#shopsData),
            returnValue: _FakeRx_2<_i5.ShopsModel>(
              this,
              Invocation.getter(#shopsData),
            ),
            returnValueForMissingStub: _FakeRx_2<_i5.ShopsModel>(
              this,
              Invocation.getter(#shopsData),
            ),
          )
          as _i2.Rx<_i5.ShopsModel>);

  @override
  set shopsData(_i2.Rx<_i5.ShopsModel>? _shopsData) => super.noSuchMethod(
    Invocation.setter(#shopsData, _shopsData),
    returnValueForMissingStub: null,
  );

  @override
  _i2.RxList<String> get listshopsData =>
      (super.noSuchMethod(
            Invocation.getter(#listshopsData),
            returnValue: _FakeRxList_0<String>(
              this,
              Invocation.getter(#listshopsData),
            ),
            returnValueForMissingStub: _FakeRxList_0<String>(
              this,
              Invocation.getter(#listshopsData),
            ),
          )
          as _i2.RxList<String>);

  @override
  set listshopsData(_i2.RxList<String>? _listshopsData) => super.noSuchMethod(
    Invocation.setter(#listshopsData, _listshopsData),
    returnValueForMissingStub: null,
  );

  @override
  _i2.Rx<_i6.CategoryByIdModel> get byCategoryShopData =>
      (super.noSuchMethod(
            Invocation.getter(#byCategoryShopData),
            returnValue: _FakeRx_2<_i6.CategoryByIdModel>(
              this,
              Invocation.getter(#byCategoryShopData),
            ),
            returnValueForMissingStub: _FakeRx_2<_i6.CategoryByIdModel>(
              this,
              Invocation.getter(#byCategoryShopData),
            ),
          )
          as _i2.Rx<_i6.CategoryByIdModel>);

  @override
  set byCategoryShopData(_i2.Rx<_i6.CategoryByIdModel>? _byCategoryShopData) =>
      super.noSuchMethod(
        Invocation.setter(#byCategoryShopData, _byCategoryShopData),
        returnValueForMissingStub: null,
      );

  @override
  _i2.Rx<_i7.ProductByIdModel> get productByIdData =>
      (super.noSuchMethod(
            Invocation.getter(#productByIdData),
            returnValue: _FakeRx_2<_i7.ProductByIdModel>(
              this,
              Invocation.getter(#productByIdData),
            ),
            returnValueForMissingStub: _FakeRx_2<_i7.ProductByIdModel>(
              this,
              Invocation.getter(#productByIdData),
            ),
          )
          as _i2.Rx<_i7.ProductByIdModel>);

  @override
  set productByIdData(_i2.Rx<_i7.ProductByIdModel>? _productByIdData) =>
      super.noSuchMethod(
        Invocation.setter(#productByIdData, _productByIdData),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RxBool get isLoading =>
      (super.noSuchMethod(
            Invocation.getter(#isLoading),
            returnValue: _FakeRxBool_3(this, Invocation.getter(#isLoading)),
            returnValueForMissingStub: _FakeRxBool_3(
              this,
              Invocation.getter(#isLoading),
            ),
          )
          as _i2.RxBool);

  @override
  set isLoading(_i2.RxBool? _isLoading) => super.noSuchMethod(
    Invocation.setter(#isLoading, _isLoading),
    returnValueForMissingStub: null,
  );

  @override
  _i2.RxBool get onSelected =>
      (super.noSuchMethod(
            Invocation.getter(#onSelected),
            returnValue: _FakeRxBool_3(this, Invocation.getter(#onSelected)),
            returnValueForMissingStub: _FakeRxBool_3(
              this,
              Invocation.getter(#onSelected),
            ),
          )
          as _i2.RxBool);

  @override
  set onSelected(_i2.RxBool? _onSelected) => super.noSuchMethod(
    Invocation.setter(#onSelected, _onSelected),
    returnValueForMissingStub: null,
  );

  @override
  _i2.RxBool get isPLoading =>
      (super.noSuchMethod(
            Invocation.getter(#isPLoading),
            returnValue: _FakeRxBool_3(this, Invocation.getter(#isPLoading)),
            returnValueForMissingStub: _FakeRxBool_3(
              this,
              Invocation.getter(#isPLoading),
            ),
          )
          as _i2.RxBool);

  @override
  set isPLoading(_i2.RxBool? _isPLoading) => super.noSuchMethod(
    Invocation.setter(#isPLoading, _isPLoading),
    returnValueForMissingStub: null,
  );

  @override
  _i2.RxBool get isStore =>
      (super.noSuchMethod(
            Invocation.getter(#isStore),
            returnValue: _FakeRxBool_3(this, Invocation.getter(#isStore)),
            returnValueForMissingStub: _FakeRxBool_3(
              this,
              Invocation.getter(#isStore),
            ),
          )
          as _i2.RxBool);

  @override
  set isStore(_i2.RxBool? _isStore) => super.noSuchMethod(
    Invocation.setter(#isStore, _isStore),
    returnValueForMissingStub: null,
  );

  @override
  set storage(dynamic _storage) => super.noSuchMethod(
    Invocation.setter(#storage, _storage),
    returnValueForMissingStub: null,
  );

  @override
  set industryType(dynamic _industryType) => super.noSuchMethod(
    Invocation.setter(#industryType, _industryType),
    returnValueForMissingStub: null,
  );

  @override
  set categoryName(dynamic _categoryName) => super.noSuchMethod(
    Invocation.setter(#categoryName, _categoryName),
    returnValueForMissingStub: null,
  );

  @override
  _i4.TextEditingController get textEditingController =>
      (super.noSuchMethod(
            Invocation.getter(#textEditingController),
            returnValue: _FakeTextEditingController_6(
              this,
              Invocation.getter(#textEditingController),
            ),
            returnValueForMissingStub: _FakeTextEditingController_6(
              this,
              Invocation.getter(#textEditingController),
            ),
          )
          as _i4.TextEditingController);

  @override
  set textEditingController(
    _i4.TextEditingController? _textEditingController,
  ) => super.noSuchMethod(
    Invocation.setter(#textEditingController, _textEditingController),
    returnValueForMissingStub: null,
  );

  @override
  _i2.InternalFinalCallback<void> get onStart =>
      (super.noSuchMethod(
            Invocation.getter(#onStart),
            returnValue: _FakeInternalFinalCallback_7<void>(
              this,
              Invocation.getter(#onStart),
            ),
            returnValueForMissingStub: _FakeInternalFinalCallback_7<void>(
              this,
              Invocation.getter(#onStart),
            ),
          )
          as _i2.InternalFinalCallback<void>);

  @override
  _i2.InternalFinalCallback<void> get onDelete =>
      (super.noSuchMethod(
            Invocation.getter(#onDelete),
            returnValue: _FakeInternalFinalCallback_7<void>(
              this,
              Invocation.getter(#onDelete),
            ),
            returnValueForMissingStub: _FakeInternalFinalCallback_7<void>(
              this,
              Invocation.getter(#onDelete),
            ),
          )
          as _i2.InternalFinalCallback<void>);

  @override
  bool get initialized =>
      (super.noSuchMethod(
            Invocation.getter(#initialized),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  bool get isClosed =>
      (super.noSuchMethod(
            Invocation.getter(#isClosed),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(
            Invocation.getter(#hasListeners),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  int get listeners =>
      (super.noSuchMethod(
            Invocation.getter(#listeners),
            returnValue: 0,
            returnValueForMissingStub: 0,
          )
          as int);

  @override
  _i12.Future<void> onInit() =>
      (super.noSuchMethod(
            Invocation.method(#onInit, []),
            returnValue: _i12.Future<void>.value(),
            returnValueForMissingStub: _i12.Future<void>.value(),
          )
          as _i12.Future<void>);

  @override
  _i12.Future<_i5.ShopsModel> getShopsCtrl() =>
      (super.noSuchMethod(
            Invocation.method(#getShopsCtrl, []),
            returnValue: _i12.Future<_i5.ShopsModel>.value(
              _FakeShopsModel_8(this, Invocation.method(#getShopsCtrl, [])),
            ),
            returnValueForMissingStub: _i12.Future<_i5.ShopsModel>.value(
              _FakeShopsModel_8(this, Invocation.method(#getShopsCtrl, [])),
            ),
          )
          as _i12.Future<_i5.ShopsModel>);

  @override
  _i12.Future<_i5.ShopsModel> getShopsSearchCtrl(String? search) =>
      (super.noSuchMethod(
            Invocation.method(#getShopsSearchCtrl, [search]),
            returnValue: _i12.Future<_i5.ShopsModel>.value(
              _FakeShopsModel_8(
                this,
                Invocation.method(#getShopsSearchCtrl, [search]),
              ),
            ),
            returnValueForMissingStub: _i12.Future<_i5.ShopsModel>.value(
              _FakeShopsModel_8(
                this,
                Invocation.method(#getShopsSearchCtrl, [search]),
              ),
            ),
          )
          as _i12.Future<_i5.ShopsModel>);

  @override
  _i12.Future<_i5.ShopsModel> getShopCategoryCtrl({String? category}) =>
      (super.noSuchMethod(
            Invocation.method(#getShopCategoryCtrl, [], {#category: category}),
            returnValue: _i12.Future<_i5.ShopsModel>.value(
              _FakeShopsModel_8(
                this,
                Invocation.method(#getShopCategoryCtrl, [], {
                  #category: category,
                }),
              ),
            ),
            returnValueForMissingStub: _i12.Future<_i5.ShopsModel>.value(
              _FakeShopsModel_8(
                this,
                Invocation.method(#getShopCategoryCtrl, [], {
                  #category: category,
                }),
              ),
            ),
          )
          as _i12.Future<_i5.ShopsModel>);

  @override
  _i12.Future<_i6.CategoryByIdModel> getByIdCategoryCtrl({String? category}) =>
      (super.noSuchMethod(
            Invocation.method(#getByIdCategoryCtrl, [], {#category: category}),
            returnValue: _i12.Future<_i6.CategoryByIdModel>.value(
              _FakeCategoryByIdModel_9(
                this,
                Invocation.method(#getByIdCategoryCtrl, [], {
                  #category: category,
                }),
              ),
            ),
            returnValueForMissingStub: _i12.Future<_i6.CategoryByIdModel>.value(
              _FakeCategoryByIdModel_9(
                this,
                Invocation.method(#getByIdCategoryCtrl, [], {
                  #category: category,
                }),
              ),
            ),
          )
          as _i12.Future<_i6.CategoryByIdModel>);

  @override
  _i12.Future<_i7.ProductByIdModel> getProductByIdCtrl({
    String? productId,
    bool? viewOrder,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getProductByIdCtrl, [], {
              #productId: productId,
              #viewOrder: viewOrder,
            }),
            returnValue: _i12.Future<_i7.ProductByIdModel>.value(
              _FakeProductByIdModel_10(
                this,
                Invocation.method(#getProductByIdCtrl, [], {
                  #productId: productId,
                  #viewOrder: viewOrder,
                }),
              ),
            ),
            returnValueForMissingStub: _i12.Future<_i7.ProductByIdModel>.value(
              _FakeProductByIdModel_10(
                this,
                Invocation.method(#getProductByIdCtrl, [], {
                  #productId: productId,
                  #viewOrder: viewOrder,
                }),
              ),
            ),
          )
          as _i12.Future<_i7.ProductByIdModel>);

  @override
  _i12.Future<_i5.ShopsModel> getParentCtrl() =>
      (super.noSuchMethod(
            Invocation.method(#getParentCtrl, []),
            returnValue: _i12.Future<_i5.ShopsModel>.value(
              _FakeShopsModel_8(this, Invocation.method(#getParentCtrl, [])),
            ),
            returnValueForMissingStub: _i12.Future<_i5.ShopsModel>.value(
              _FakeShopsModel_8(this, Invocation.method(#getParentCtrl, [])),
            ),
          )
          as _i12.Future<_i5.ShopsModel>);

  @override
  _i12.Future<void> getPSubCtrl(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getPSubCtrl, [id]),
            returnValue: _i12.Future<void>.value(),
            returnValueForMissingStub: _i12.Future<void>.value(),
          )
          as _i12.Future<void>);

  @override
  _i12.Future<void> getSubCtrl(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getSubCtrl, [id]),
            returnValue: _i12.Future<void>.value(),
            returnValueForMissingStub: _i12.Future<void>.value(),
          )
          as _i12.Future<void>);

  @override
  void update([List<Object>? ids, bool? condition = true]) =>
      super.noSuchMethod(
        Invocation.method(#update, [ids, condition]),
        returnValueForMissingStub: null,
      );

  @override
  void onReady() => super.noSuchMethod(
    Invocation.method(#onReady, []),
    returnValueForMissingStub: null,
  );

  @override
  void onClose() => super.noSuchMethod(
    Invocation.method(#onClose, []),
    returnValueForMissingStub: null,
  );

  @override
  void $configureLifeCycle() => super.noSuchMethod(
    Invocation.method(#$configureLifeCycle, []),
    returnValueForMissingStub: null,
  );

  @override
  _i13.Disposer addListener(_i13.GetStateUpdate? listener) =>
      (super.noSuchMethod(
            Invocation.method(#addListener, [listener]),
            returnValue: () {},
            returnValueForMissingStub: () {},
          )
          as _i13.Disposer);

  @override
  void removeListener(_i14.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void refresh() => super.noSuchMethod(
    Invocation.method(#refresh, []),
    returnValueForMissingStub: null,
  );

  @override
  void refreshGroup(Object? id) => super.noSuchMethod(
    Invocation.method(#refreshGroup, [id]),
    returnValueForMissingStub: null,
  );

  @override
  void notifyChildrens() => super.noSuchMethod(
    Invocation.method(#notifyChildrens, []),
    returnValueForMissingStub: null,
  );

  @override
  void removeListenerId(Object? id, _i14.VoidCallback? listener) =>
      super.noSuchMethod(
        Invocation.method(#removeListenerId, [id, listener]),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  _i13.Disposer addListenerId(Object? key, _i13.GetStateUpdate? listener) =>
      (super.noSuchMethod(
            Invocation.method(#addListenerId, [key, listener]),
            returnValue: () {},
            returnValueForMissingStub: () {},
          )
          as _i13.Disposer);

  @override
  void disposeId(Object? id) => super.noSuchMethod(
    Invocation.method(#disposeId, [id]),
    returnValueForMissingStub: null,
  );

  @override
  _i12.Future<bool> saveData(_i15.LoginResponseModel? loginResponseModel) =>
      (super.noSuchMethod(
            Invocation.method(#saveData, [loginResponseModel]),
            returnValue: _i12.Future<bool>.value(false),
            returnValueForMissingStub: _i12.Future<bool>.value(false),
          )
          as _i12.Future<bool>);

  @override
  _i12.Future<void> removeData() =>
      (super.noSuchMethod(
            Invocation.method(#removeData, []),
            returnValue: _i12.Future<void>.value(),
            returnValueForMissingStub: _i12.Future<void>.value(),
          )
          as _i12.Future<void>);

  @override
  _i12.Future<void> removeToken() =>
      (super.noSuchMethod(
            Invocation.method(#removeToken, []),
            returnValue: _i12.Future<void>.value(),
            returnValueForMissingStub: _i12.Future<void>.value(),
          )
          as _i12.Future<void>);
}

/// A class which mocks [CacheManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockCacheManager extends _i1.Mock implements _i16.CacheManager {
  @override
  _i12.Future<bool> saveData(_i15.LoginResponseModel? loginResponseModel) =>
      (super.noSuchMethod(
            Invocation.method(#saveData, [loginResponseModel]),
            returnValue: _i12.Future<bool>.value(false),
            returnValueForMissingStub: _i12.Future<bool>.value(false),
          )
          as _i12.Future<bool>);

  @override
  _i12.Future<void> removeData() =>
      (super.noSuchMethod(
            Invocation.method(#removeData, []),
            returnValue: _i12.Future<void>.value(),
            returnValueForMissingStub: _i12.Future<void>.value(),
          )
          as _i12.Future<void>);

  @override
  _i12.Future<void> removeToken() =>
      (super.noSuchMethod(
            Invocation.method(#removeToken, []),
            returnValue: _i12.Future<void>.value(),
            returnValueForMissingStub: _i12.Future<void>.value(),
          )
          as _i12.Future<void>);
}

/// A class which mocks [GetStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetStorage extends _i1.Mock implements _i8.GetStorage {
  @override
  _i8.Microtask get microtask =>
      (super.noSuchMethod(
            Invocation.getter(#microtask),
            returnValue: _FakeMicrotask_11(this, Invocation.getter(#microtask)),
            returnValueForMissingStub: _FakeMicrotask_11(
              this,
              Invocation.getter(#microtask),
            ),
          )
          as _i8.Microtask);

  @override
  _i2.GetQueue get queue =>
      (super.noSuchMethod(
            Invocation.getter(#queue),
            returnValue: _FakeGetQueue_12(this, Invocation.getter(#queue)),
            returnValueForMissingStub: _FakeGetQueue_12(
              this,
              Invocation.getter(#queue),
            ),
          )
          as _i2.GetQueue);

  @override
  set queue(_i2.GetQueue? _queue) => super.noSuchMethod(
    Invocation.setter(#queue, _queue),
    returnValueForMissingStub: null,
  );

  @override
  _i12.Future<bool> get initStorage =>
      (super.noSuchMethod(
            Invocation.getter(#initStorage),
            returnValue: _i12.Future<bool>.value(false),
            returnValueForMissingStub: _i12.Future<bool>.value(false),
          )
          as _i12.Future<bool>);

  @override
  set initStorage(_i12.Future<bool>? _initStorage) => super.noSuchMethod(
    Invocation.setter(#initStorage, _initStorage),
    returnValueForMissingStub: null,
  );

  @override
  Map<String, dynamic> get changes =>
      (super.noSuchMethod(
            Invocation.getter(#changes),
            returnValue: <String, dynamic>{},
            returnValueForMissingStub: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  _i8.ValueStorage<Map<String, dynamic>> get listenable =>
      (super.noSuchMethod(
            Invocation.getter(#listenable),
            returnValue: _FakeValueStorage_13<Map<String, dynamic>>(
              this,
              Invocation.getter(#listenable),
            ),
            returnValueForMissingStub:
                _FakeValueStorage_13<Map<String, dynamic>>(
                  this,
                  Invocation.getter(#listenable),
                ),
          )
          as _i8.ValueStorage<Map<String, dynamic>>);

  @override
  T? read<T>(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#read, [key]),
            returnValueForMissingStub: null,
          )
          as T?);

  @override
  T getKeys<T>() =>
      (super.noSuchMethod(
            Invocation.method(#getKeys, []),
            returnValue: _i17.dummyValue<T>(
              this,
              Invocation.method(#getKeys, []),
            ),
            returnValueForMissingStub: _i17.dummyValue<T>(
              this,
              Invocation.method(#getKeys, []),
            ),
          )
          as T);

  @override
  T getValues<T>() =>
      (super.noSuchMethod(
            Invocation.method(#getValues, []),
            returnValue: _i17.dummyValue<T>(
              this,
              Invocation.method(#getValues, []),
            ),
            returnValueForMissingStub: _i17.dummyValue<T>(
              this,
              Invocation.method(#getValues, []),
            ),
          )
          as T);

  @override
  bool hasData(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#hasData, [key]),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  _i14.VoidCallback listen(_i14.VoidCallback? value) =>
      (super.noSuchMethod(
            Invocation.method(#listen, [value]),
            returnValue: () {},
            returnValueForMissingStub: () {},
          )
          as _i14.VoidCallback);

  @override
  _i14.VoidCallback listenKey(
    String? key,
    _i4.ValueSetter<dynamic>? callback,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#listenKey, [key, callback]),
            returnValue: () {},
            returnValueForMissingStub: () {},
          )
          as _i14.VoidCallback);

  @override
  _i12.Future<void> write(String? key, dynamic value) =>
      (super.noSuchMethod(
            Invocation.method(#write, [key, value]),
            returnValue: _i12.Future<void>.value(),
            returnValueForMissingStub: _i12.Future<void>.value(),
          )
          as _i12.Future<void>);

  @override
  void writeInMemory(String? key, dynamic value) => super.noSuchMethod(
    Invocation.method(#writeInMemory, [key, value]),
    returnValueForMissingStub: null,
  );

  @override
  _i12.Future<void> writeIfNull(String? key, dynamic value) =>
      (super.noSuchMethod(
            Invocation.method(#writeIfNull, [key, value]),
            returnValue: _i12.Future<void>.value(),
            returnValueForMissingStub: _i12.Future<void>.value(),
          )
          as _i12.Future<void>);

  @override
  _i12.Future<void> remove(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#remove, [key]),
            returnValue: _i12.Future<void>.value(),
            returnValueForMissingStub: _i12.Future<void>.value(),
          )
          as _i12.Future<void>);

  @override
  _i12.Future<void> erase() =>
      (super.noSuchMethod(
            Invocation.method(#erase, []),
            returnValue: _i12.Future<void>.value(),
            returnValueForMissingStub: _i12.Future<void>.value(),
          )
          as _i12.Future<void>);

  @override
  _i12.Future<void> save() =>
      (super.noSuchMethod(
            Invocation.method(#save, []),
            returnValue: _i12.Future<void>.value(),
            returnValueForMissingStub: _i12.Future<void>.value(),
          )
          as _i12.Future<void>);
}
